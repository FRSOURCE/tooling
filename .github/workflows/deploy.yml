name: build & deploy (prod)
on:
  workflow_dispatch:

jobs:
  api_build_prod:
    name: Build API and DB (production)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: FRSOURCE/nginx-proxy/.github/actions/setup-ssh@main
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          PRIVATE_KEY: ${{ secrets.FRSCHOOL_SSH_PRIVATE_KEY }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/docker-build-push-and-pull-on-host
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          APP_ENV: production
          working-directory: ./e-learning/api
          project-name: e-learning-prod
          skip-deploy: 'false'
        env:
          VERSION_TAG: main-${{ github.sha }}
          DATABASE_USER: ${{ secrets.ELEARNING_DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.ELEARNING_DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.ELEARNING_DATABASE_NAME }}
          SESSION_COOKIE_SECRET: ${{ secrets.ELEARNING_API_SESSION_COOKIE_SECRET }}
          EMAIL_HOST: ${{ vars.ELEARNING_API_EMAIL_HOST }}
          EMAIL_PASS: ${{ vars.ELEARNING_API_EMAIL_PASS }}
          EMAIL_PORT: ${{ vars.ELEARNING_API_EMAIL_PORT }}
          EMAIL_USER: ${{ vars.ELEARNING_API_EMAIL_USER }}

  web_build_prod:
    name: Build Web (production)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: FRSOURCE/nginx-proxy/.github/actions/setup-ssh@main
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          PRIVATE_KEY: ${{ secrets.FRSCHOOL_SSH_PRIVATE_KEY }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/docker-build-push-and-pull-on-host
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          APP_ENV: production
          working-directory: ./e-learning/web
          project-name: e-learning-prod
          skip-deploy: 'false'
        env:
          VERSION_TAG: main-${{ github.sha }}

  deploy_prod:
    needs: [web_build_prod, api_build_prod]
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - uses: FRSOURCE/nginx-proxy/.github/actions/setup-ssh@main
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          PRIVATE_KEY: ${{ secrets.FRSCHOOL_SSH_PRIVATE_KEY }}
      - uses: FRSOURCE/nginx-proxy/.github/actions/setup-ssh-docker-context@main
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
      # IDEA: bring up maintenance screen for a moment when the deploy happens
      - uses: ./.github/actions/docker-run
        with:
          APP_ENV: production
          working-directory: ./e-learning/api
          project-name: e-learning-prod
        env:
          VERSION_TAG: main-${{ github.sha }}
          DATABASE_USER: ${{ secrets.ELEARNING_DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.ELEARNING_DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.ELEARNING_DATABASE_NAME }}
          SESSION_COOKIE_SECRET: ${{ secrets.ELEARNING_API_SESSION_COOKIE_SECRET }}
          EMAIL_HOST: ${{ vars.ELEARNING_API_EMAIL_HOST }}
          EMAIL_PASS: ${{ vars.ELEARNING_API_EMAIL_PASS }}
          EMAIL_PORT: ${{ vars.ELEARNING_API_EMAIL_PORT }}
          EMAIL_USER: ${{ vars.ELEARNING_API_EMAIL_USER }}
      - uses: ./.github/actions/docker-run
        with:
          HOST: ${{ secrets.FRSCHOOL_SSH_HOST }}
          APP_ENV: production
          working-directory: ./e-learning/web
          project-name: e-learning-prod
        env:
          VERSION_TAG: main-${{ github.sha }}
      - name: Removes unused images older than 2 days from Vultr server
        # older images are available on github packages docker repository here:
        # https://github.com/orgs/FRSOURCE/packages?repo_name=frschool
        run: docker image prune -a --force --filter "until=48h"
      - uses: ./.github/actions/trigger-e2e
        with:
          e2e-type: 'production'
          PAT_TOKEN: ${{ secrets.ELEARNING_TESTING_PAT_TOKEN }}
